skill:
  description: Keep your project free from confusing dependencies
  category:
    - DEPENDENCIES
    - DEV_EX
  package:
    use: atomist/package-cljs-skill
  repository: 'https://github.com/atomist-skills/lein-deps-tree'
  license: Apache-2.0
  homepage: 'https://github.com/atomist-skills/lein-deps-tree'
  name: atomist/lein-deps-tree
  long_description: >
    Open and close Github Issues depending on the presence of confusing
    Leiningen dependencies
  icon: 'https://leiningen.org/img/leiningen.jpg'
  title: Lein Dependency Tree
  author: Atomist
  dispatch: single
  runtime:
    memory: 512
    timeout: 60
    entry_point: eventhandler
    name: nodejs10
resource_providers:
  - name: github
    description: GitHub
    typeName: GitHubAppResourceProvider
    minRequired: 1
    maxAllowed: 1
parameters:
  - repoFilter:
      description: The set of Repositories for this String Replace rule.
      displayName: Repository Scope
      name: scope
      required: false
artifacts:
  docker:
    - name: skill
      image: 'gcr.io/atomist-container-skills/lein-deps-tree-skill:0.1.0'
      env:
        - name: ARTIFACTORY_USER
          value: clojure-build
        - name: ARTIFACTORY_PWD
          value: '${configuration[0].parameters.maven}'
subscriptions:
  - |-
    subscription OnAnyPush {
      Push {
          id
          branch
          repo {
              channels {
                  channelId
                  name
              }
              branches {
                  id
              }
              defaultBranch
              id
              name
              org {
                  id
                  owner
                  ownerType
                  scmProvider {
                      credential {
                          scopes
                          id
                          secret
                          owner {
                              name
                              login
                          }
                      }
                      id
                      name
                      providerId
                      providerType
                      authProviderId
                  }
                  team {
                      chatTeams {
                          name
                          id
                      }
                  }
              }
          }
          after {
              id
              sha
          }
      }
    }
